-- =====================================================================
-- EXEMPLO DE SCRIPT DE CRIAÇÃO DE BANCO DE DADOS
-- DBMS: PostgreSQL 12+
-- Autor: Henrique H. P., feito com o auxílio de I.A. (Google Gemini)
-- Data: 11 de Junho de 2025
-- =====================================================================

-- Limpeza do ambiente (para desenvolvimento)
-- Garante que o script possa ser executado várias vezes sem erros.
DROP TABLE IF EXISTS conexao;
DROP TABLE IF EXISTS unidade;

-- Criação da tabela principal 'unidade'
CREATE TABLE unidade (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    endereco VARCHAR(255) NOT NULL UNIQUE,
    status VARCHAR(50) NOT NULL DEFAULT 'ATIVO' CHECK (status IN ('ATIVO', 'INATIVO', 'EM_MANUTENCAO', 'INDETERMINADO'))
);

-- Criação da tabela associativa 'conexao'
-- Esta tabela implementa o relacionamento N:M de 'unidade' com ela mesma.
CREATE TABLE conexao (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    -- Chaves estrangeiras que formam a conexão
    unidade_origem_id BIGINT NOT NULL,
    unidade_destino_id BIGINT NOT NULL,

    -- Constraints para definir as haves estrangeiras
    CONSTRAINT fk_conexao_origem FOREIGN KEY (unidade_origem_id)
        REFERENCES unidade(id)
        ON DELETE CASCADE, -- Se a unidade de origem for deletada, a conexão é desfeita.

    CONSTRAINT fk_conexao_destino FOREIGN KEY (unidade_destino_id)
        REFERENCES unidade(id)
        ON DELETE CASCADE, -- Se a unidade de destino for deletada, a conexão é desfeita.

    -- Restrição de Negócio: Impede conexões duplicadas.
    -- Uma unidade não pode se conectar (ter como destino ou como origem) com outra mesma unidade mais de uma vez.
    CONSTRAINT uq_origem_destino UNIQUE (unidade_origem_id, unidade_destino_id),

    -- Restrição de Negócio: Impede que uma unidade se conecte a si mesma.
    CONSTRAINT chk_nao_auto_conexao CHECK (unidade_origem_id <> unidade_destino_id)
);